/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package servidorblogapsrmi;

import util.Validador;
import util.Regra;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Luiz
 */
public class ListarTodas extends javax.swing.JFrame {

    FuncoesBlog canal;
    List<String> regras;
    DefaultListModel dlm = new DefaultListModel();
    boolean atualizar = false;

    /**
     * Creates new form ListarTodas
     */
    public ListarTodas() {
        this.canal = canal;

        initComponents();
        //Para a tela iniciar no centro
        setLocationRelativeTo(null);

    }

    public ListarTodas(FuncoesBlog canal) {
        this.canal = canal;

        initComponents();
        //Para a tela iniciar no centro
        setLocationRelativeTo(null);

        montarLista();

        jLabelMsgAplicar.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldIpInicial = new javax.swing.JFormattedTextField();
        jTextFieldIpFinal = new javax.swing.JFormattedTextField();
        jTextFieldPortaInicial = new javax.swing.JTextField();
        jTextFieldPortaFinal = new javax.swing.JTextField();
        jBtnSalvar = new javax.swing.JButton();
        jBtnCancelar = new javax.swing.JToggleButton();
        jBtnAdicionarRegra = new javax.swing.JButton();
        jLabelMsgAplicar = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 153, 153), null, null));

        jList1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("Endereço IP");

        jLabel2.setText("PORTAS");

        jLabel3.setText("Accept/Reject");

        jLabel9.setText("Permissão");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addGap(306, 306, 306))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setText("Ip Inicial");

        jLabel5.setText("Ip Final");

        jLabel6.setText("Porta Inicial");

        jLabel7.setText("Porta Final");

        jTextFieldIpInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIpInicialActionPerformed(evt);
            }
        });

        jTextFieldIpFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIpFinalActionPerformed(evt);
            }
        });

        jBtnSalvar.setText("Salvar Arquivo");
        jBtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSalvarActionPerformed(evt);
            }
        });

        jBtnCancelar.setText("Cancelar");
        jBtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarActionPerformed(evt);
            }
        });

        jBtnAdicionarRegra.setText("Adicionar Regra");
        jBtnAdicionarRegra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAdicionarRegraActionPerformed(evt);
            }
        });

        jLabelMsgAplicar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelMsgAplicar.setForeground(new java.awt.Color(204, 0, 0));
        jLabelMsgAplicar.setText("Para aplicar as configurações clique em Ferramentas -> Aplicar Configurações");

        jButton1.setText("Ajuda");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldIpInicial))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldPortaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldIpFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldPortaFinal)))
                        .addGap(30, 30, 30)
                        .addComponent(jBtnAdicionarRegra))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabelMsgAplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jTextFieldIpInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jTextFieldIpFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtnAdicionarRegra))
                    .addComponent(jBtnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jTextFieldPortaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldPortaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(jBtnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jLabelMsgAplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        String[] options = new String[]{"Editar", "Excluir", "Cancel"};
        int response = JOptionPane.showOptionDialog(null, "Escolha a opção desejada: ", "Manipulação de Regras",
                JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE,
                null, options, options[0]);
        switch (response) {
            case 0:
                Regra regra = new Regra();
                jTextFieldIpInicial.setText(regra.RetornaIP(jList1.getSelectedValue().toString()));
                jTextFieldPortaInicial.setText(regra.RetornaPortaInicial(jList1.getSelectedValue().toString()));
                jTextFieldPortaFinal.setText(regra.RetornaPortaFinal(jList1.getSelectedValue().toString()));
                jBtnAdicionarRegra.setText("Atualizar");
                dlm.remove(jList1.getSelectedIndex());
                this.atualizar = true;
                break;

            case 1:
                dlm.remove(jList1.getSelectedIndex());
                break;

            default:

                break;

        }


    }//GEN-LAST:event_jList1MouseClicked

    private void jBtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSalvarActionPerformed

        //Esse metodo envia lista para ser gravada diretamente no arquivo;
        List<String> serverPolicy = new ArrayList();

        try {
            for (int i = 0; dlm.size() - 1 >= i; i++) {
                serverPolicy.add((String) dlm.get(i));
            }
            canal.gravarArquivo(serverPolicy);
            jBtnCancelar.setText("Sair");
            jLabelMsgAplicar.setVisible(true);
        } catch (RemoteException ex) {
            JOptionPane.showConfirmDialog(null, "Erro ao gravar arquivo \n" + ex, "Erro", JOptionPane.OK_CANCEL_OPTION);
        }


    }//GEN-LAST:event_jBtnSalvarActionPerformed

    private void jTextFieldIpFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIpFinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIpFinalActionPerformed

    private void jBtnAdicionarRegraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAdicionarRegraActionPerformed
        String REGRA = "permission java.net.SocketPermission ";
        String PERMISSAO = "\"accept, resolve\";";
        Validador valida = new Validador();

// "permission java.net.SocketPermission \"127.0.0.1:1099\", \"accept, resolve\";"
        String ipInicial = jTextFieldIpInicial.getText();
        String ipFinal = jTextFieldIpFinal.getText();

        String portaInicial = jTextFieldPortaInicial.getText();
        String portaFinal = jTextFieldPortaFinal.getText();

        if (atualizar == true) {
            this.atualizar = false;
        }

        if (ipFinal.equals("")) {
            if (valida.validateFormOneIp(ipInicial, portaInicial, portaFinal)) {
                dlm.addElement(REGRA + "\"" + ipInicial + ":" + portaInicial + "-" + portaFinal + "\"," + PERMISSAO);
            } else {
                JOptionPane.showMessageDialog(null, "Erro de validação por favor insira\n"
                        + "dados válido caso dúvida consulte a ajuda do Sistema\n"
                        + "Exemplo:\n"
                        + "IP=192.168.1.10, PORTA INICIAL=0 até 65535 \n"
                        + "PORTA FINAL maior ou igual a inicial variando até 65535 ");
            }
        } else {
            if (valida.validateFormTwoIp(ipInicial, ipFinal, portaInicial, portaFinal)) {
                String rangeInicial = ipInicial.substring(ipInicial.lastIndexOf(".") + 1, ipInicial.length());
                String rangeFinal = ipFinal.substring(ipFinal.lastIndexOf(".") + 1, ipFinal.length());
                String ipParcialFinal = ipFinal.substring(0, ipFinal.lastIndexOf(".") + 1);
                String ipParcialInicial = ipInicial.substring(0, ipInicial.lastIndexOf(".") + 1);

                {

                }
                if (ipParcialInicial.equals(ipParcialFinal) && Integer.parseInt(rangeInicial) <= Integer.parseInt(rangeFinal)) {

                    for (int index = Integer.parseInt(rangeInicial); index <= Integer.parseInt(rangeFinal); index++) {
                        dlm.addElement(REGRA + "\"" + ipParcialInicial + index + ":" + portaInicial + "-" + portaFinal + "\"," + PERMISSAO);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Ranges de IP diferentes ou ip inicial menor que o final");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Erro de validação por favor insira\n"
                        + "dados válido caso dúvida consulte a ajuda do Sistema\n"
                        + "Exemplo:\n"
                        + "IP INICIAL=192.168.1.10, \n"
                        + "IP FINAL = 192.168.1.15"
                        + "PORTA INICIAL=0 até 65535 \n"
                        + "PORTA FINAL maior ou igual a inicial variando até 65535 ");
            }

        }

        jTextFieldIpInicial.setText("");
        jTextFieldIpFinal.setText("");
        jTextFieldPortaInicial.setText("");
        jTextFieldPortaFinal.setText("");

        jBtnAdicionarRegra.setText("Adicionar Regra");
    }//GEN-LAST:event_jBtnAdicionarRegraActionPerformed

    private void jBtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Deseja sair do Controle de Acesso?", "Saída", JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_jBtnCancelarActionPerformed

    private void jTextFieldIpInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIpInicialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIpInicialActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JOptionPane.showMessageDialog(rootPane, ""
                + "Para acesso ao servidor recomenda-se aberura da porta 1099 e o range de 1024-65535\n"
                + "para os Endereços desejados\n"
                + "###########################################################################\n"
                + "Para a inserção de um IP apenas:\n"
                + "Preencha apenas o campo Ip inicial e as porta inicial e final, caso o Ip inicial sejam\n"
                + "iguais também haverá a inserção de um único IP.\n"
                + "\n"
                + "O padrão para inserção de IP deverá ser no intervalo de 000.000.000.000 e 255.255.255.255\n"
                + "As portas podem ser de valor igual porem a porta final nunca poderá ser menor que a inicial \n"
                + "as portas podem variar de 0 à 65535.\n"
                + "##########################################################################\n"
                + "Para a inserção de um intervalo de IP :\n"
                + "Preencha apenas o campo Ip inicial, Ip final  as porta inicial e final, caso o \n"
                + "Ip inicial sejam iguais também haverá a inserção de um único IP, e o IP final \n"
                + "deverá ser maior que o inicial e pertencer ao mesmo range por exemplo:\n"
                + "\n"
                + "Ip inicial 192.168.10.1----- Ip Final 192.168.10.20\n"
                + "O padrão para inserção de IP deverá ser no intervalo de 000.000.000.000 e 255.255.255.255\n"
                + "As portas podem ser de valor igual porem a porta final nunca poderá ser menor que a \n"
                + "inicial as portas podem variar de 0 à 65535.\n"
                + "\n"
                + "###########################################################################\n"
                + "Após a inserção das regras as configurações serão salvas ao clicar no botão gravar arquivo, \n"
                + "porém para que tenham efeito será necessário acessar a opção :\n"
                + "Ferramentas>>>Aplicar Configurações na janela principal.");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarTodas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarTodas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarTodas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarTodas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarTodas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAdicionarRegra;
    private javax.swing.JToggleButton jBtnCancelar;
    private javax.swing.JButton jBtnSalvar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelMsgAplicar;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField jTextFieldIpFinal;
    private javax.swing.JFormattedTextField jTextFieldIpInicial;
    private javax.swing.JTextField jTextFieldPortaFinal;
    private javax.swing.JTextField jTextFieldPortaInicial;
    // End of variables declaration//GEN-END:variables

    private void getRegras() {

        try {
            //carrega regras em lista a partir do bind 
            this.regras = new ArrayList();
            this.regras = canal.listarRegras();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro Listar Todas getRegras: " + e.getMessage());
        }
    }

    private void montarLista() {

        getRegras();

        this.regras.remove(0);
        this.regras.remove(regras.size() - 1);

        for (String r : regras) {

            this.dlm.addElement(r);
        }

        this.jList1.setModel(dlm);

    }
}
